/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ URL
 * –≤ Wiki.js MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö
 */

import { WikiJsAPI } from "./dist/tools.js";

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const config = {
  baseUrl: process.env.WIKIJS_BASE_URL || "http://localhost:8080",
  token: process.env.WIKIJS_TOKEN || "",
  locale: process.env.WIKIJS_LOCALE || "ru",
};

async function testUrlFunctionality() {
  console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ URL");
  console.log("üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:");
  console.log(`   Base URL: ${config.baseUrl}`);
  console.log(`   Locale: ${config.locale}`);
  console.log(
    `   Token: ${config.token ? "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" : "‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}`
  );
  console.log();

  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API
    const api = new WikiJsAPI(config.baseUrl, config.token, config.locale);

    console.log("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...");
    const newPage = await api.createPage(
      "–¢–µ—Å—Ç URL —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
      `# –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è URL

–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL.

## –û–∂–∏–¥–∞–µ–º—ã–π URL
\`${config.baseUrl}/${config.locale}/test/url-functionality\`

## –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
${new Date().toISOString()}
`,
      "test/url-functionality",
      "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
      ["—Ç–µ—Å—Ç", "url", "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"]
    );

    console.log("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞:");
    console.log(`   ID: ${newPage.id}`);
    console.log(`   –ü—É—Ç—å: ${newPage.path}`);
    console.log(`   URL: ${newPage.url || "‚ùå URL –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω"}`);
    console.log();

    console.log("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ...");
    const retrievedPage = await api.getPage(newPage.id);
    console.log("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—É—á–µ–Ω–∞:");
    console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${retrievedPage.title}`);
    console.log(`   URL: ${retrievedPage.url || "‚ùå URL –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω"}`);
    console.log();

    console.log("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü...");
    const pages = await api.listPages(5);
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${pages.length} —Å—Ç—Ä–∞–Ω–∏—Ü:`);
    pages.forEach((page, index) => {
      console.log(`   ${index + 1}. ${page.title}`);
      console.log(`      URL: ${page.url || "‚ùå URL –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω"}`);
    });
    console.log();

    console.log("üîç –ü–æ–∏—Å–∫ —Å—Ç—Ä–∞–Ω–∏—Ü...");
    const searchResults = await api.searchPages("—Ç–µ—Å—Ç", 3);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${searchResults.length} —Å—Ç—Ä–∞–Ω–∏—Ü:`);
    searchResults.forEach((page, index) => {
      console.log(`   ${index + 1}. ${page.title}`);
      console.log(`      URL: ${page.url || "‚ùå URL –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω"}`);
    });
    console.log();

    console.log("‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...");
    const updatedPage = await api.updatePage(
      newPage.id,
      `# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞

–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.

## URL –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
\`${config.baseUrl}/${config.locale}/test/url-functionality\`

## –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
${new Date().toISOString()}

‚úÖ **–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!**
`
    );

    console.log("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:");
    console.log(`   URL: ${updatedPage.url || "‚ùå URL –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω"}`);
    console.log();

    console.log("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
    console.log(
      `üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${
        updatedPage.url || `${config.baseUrl}/${config.locale}/${newPage.path}`
      }`
    );
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error.message);
    console.error("üìù –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:");
    console.error("   1. Wiki.js —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω");
    console.error("   2. WIKIJS_TOKEN –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω");
    console.error("   3. WIKIJS_BASE_URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å");
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (import.meta.url === `file://${process.argv[1]}`) {
  testUrlFunctionality();
}
